#ifndef _RL_H
#define _RL_H

#include <stdint.h>

typedef uint32_t tile_t;

#define MAX_ACTIONS 10
#define TILE_SIZE sizeof(tile_t)
#define MAX_TILINGS_PER_SET 8
#define MAX_TILES_PER_DIM 6

#define ACTION_SET_SIZE MAX_ACTIONS*TILE_SIZE
#define TILE_SET_CONST_PART MAX_TILINGS_PER_SET*MAX_ACTIONS // needs mult by tile count.

#define T1_MAX_DIMS 1
#define T2_MAX_DIMS 2
#define T3_MAX_DIMS 4

#define T1_MAX_SETS 8
#define T2_MAX_SETS 8
#define T3_MAX_SETS 1

// I don't think there's a conveneient way to macro this
#define T1_MAX_TILES_PER_TILING MAX_TILES_PER_DIM
#define T2_MAX_TILES_PER_TILING MAX_TILES_PER_DIM*MAX_TILES_PER_DIM
#define T3_MAX_TILES_PER_TILING MAX_TILES_PER_DIM*MAX_TILES_PER_DIM*MAX_TILES_PER_DIM*MAX_TILES_PER_DIM

#define MAX_CLS_TILES T1_MAX_SETS*T1_MAX_TILES_PER_TILING*TILE_SET_CONST_PART
#define MAX_CTM_TILES T2_MAX_SETS*T2_MAX_TILES_PER_TILING*TILE_SET_CONST_PART
#define MAX_IMEM_TILES T3_MAX_SETS*T3_MAX_TILES_PER_TILING*TILE_SET_CONST_PART

#define MAX_CLS_SIZE MAX_CLS_TILES*ACTION_SET_SIZE
#define MAX_CTM_SIZE MAX_CTM_TILES*ACTION_SET_SIZE
#define MAX_IMEM_SIZE MAX_IMEM_TILES*ACTION_SET_SIZE

#endif /* !_RL_H_ */
